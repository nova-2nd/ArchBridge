---
- name: Provision system
  hosts: all
  environment:
    http_proxy: '{{ http_proxy }}'
  tasks:
    - name: Partition disk
      vars:
        label: gpt
        unit: MiB
      block:
        - name: Read device information
          register: parted
          community.general.parted:
            device: /dev/sda
            unit: '{{ unit }}'
        - name: Remove all partitions from disk
          community.general.parted:
            device: /dev/sda
            number: '{{ item.num }}'
            state: absent
          loop: '{{ parted.partitions }}'
        - name: Create a ESP partition
          register: parted
          community.general.parted:
            device: /dev/sda
            label: '{{ label }}'
            number: 1
            flags: [esp]
            state: present
            fs_type: fat32
            part_end: 513MiB
            unit: '{{ unit }}'
        - name: Create a LVM partition
          register: parted
          community.general.parted:
            device: /dev/sda
            label: '{{ label }}'
            number: 2
            flags: [lvm]
            state: present
            part_start: 513MiB
            part_end: "100%"
            unit: '{{ unit }}'
        - name: Update ansible facts
          ansible.builtin.setup:
            gather_subset:
              - '!all'
              - devices
    - name: Create LVM volumes
      block:
        - name: Create LVM vg
          community.general.lvg:
            vg: vg.services
            pvs: /dev/sda2
        - name: Create a thin pool
          community.general.lvol:
            vg: vg.services
            thinpool: testpool
            size: 90%PVS
        - name: Create the root volume
          community.general.lvol:
            vg: vg.services
            lv: test
            thinpool: testpool
            size: 15g
        - name: Update ansible facts
          ansible.builtin.setup:
            gather_subset:
              - '!all'
              - devices
    - name: Format volumes
      block:
        - name: Format ESP
          community.general.filesystem:
            fstype: vfat
            dev: /dev/sda1
            opts: "-F 32"
        - name: Format root
          community.general.filesystem:
            fstype: xfs
            dev: /dev/vg.services/test
    - name: Mount volumes
      block:
        - name: Mount root
          ansible.posix.mount:
            path: /mnt
            src: /dev/vg.services/test
            fstype: xfs
            state: ephemeral
        - name: Mount ESP
          ansible.posix.mount:
            path: /mnt/boot
            src: /dev/sda1
            fstype: vfat
            state: ephemeral
    - name: Bootstrap OS
      block:
        - name: Install debootstrap
          ansible.builtin.package:
            name: debootstrap
            state: present
        - name: Bootstrap base system
          ansible.builtin.shell:
            cmd: debootstrap --verbose --include=python3 bookworm /mnt http://debian.otenet.gr/debian
        - name: Mount proc
          ansible.posix.mount:
            path: /mnt/proc
            src: proc
            fstype: proc
            state: ephemeral
        - name: Mount sys
          ansible.posix.mount:
            path: /mnt/sys
            src: sysfs
            fstype: sysfs
            state: ephemeral
        - name: Mount efivars
          ansible.posix.mount:
            path: /mnt/sys/firmware/efi/efivars
            src: efivarfs
            fstype: efivarfs
            state: ephemeral
        - name: Mount dev
          ansible.posix.mount:
            path: /mnt/dev
            src: udev
            fstype: devtmpfs
            state: ephemeral
        - name: Mount devpts
          ansible.posix.mount:
            path: /mnt/dev/pts
            src: devpts
            fstype: devpts
            state: ephemeral
        - name: Mount shm
          ansible.posix.mount:
            path: /mnt/dev/shm
            src: shm
            fstype: tmpfs
            state: ephemeral
        - name: Mount tmp
          ansible.posix.mount:
            path: /mnt/tmp
            src: tmp
            fstype: tmpfs
            state: ephemeral
        - name: Mount run
          ansible.posix.mount:
            path: /mnt/run
            src: /run
            fstype: none
            opts: bind
            state: ephemeral
        - name: populate resolv.conf
          ansible.builtin.shell:
            cmd: echo "nameserver 8.8.8.8" > /mnt/etc/resolv.conf
        - name: populate hostname
          ansible.builtin.shell:
            cmd: echo "debian" > /mnt/etc/hostname
        - name: populate fstab
          ansible.builtin.shell:
            cmd: genfstab -U /mnt > /mnt/etc/fstab
        - name: Add chroot to ansible inventory
          ansible.builtin.add_host:
            groups: chroots
            name: /mnt
- hosts: chroots
  connection: community.general.chroot
  environment:
    http_proxy: '{{ http_proxy }}'
  tasks:
    - name: Configure new system
      block:
      - name: Configure locales
        ansible.builtin.debconf:
          name: locales
          question: locales/locales_to_be_generated
          value: en_US.UTF-8 UTF-8
          vtype: multiselect
      - name: Configure default locale
        ansible.builtin.debconf:
          name: locales
          question: locales/default_environment_locale
          value: C.UTF-8
          vtype: select
      - name: Install packages
        ansible.builtin.package:
          name:
            - lvm2
            - xfsprogs
            - locales
            - linux-image-amd64
            - grub-efi
            - snmp
            - openssh-server
          state: present
      - name: Install GRUB on ESP
        ansible.builtin.shell:
          cmd: . /etc/profile && grub-install --efi-directory=/boot
      - name: Ensure SELinux is set to enforcing mode
        ansible.builtin.lineinfile:
          path: /etc/default/grub
          regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
          line: GRUB_CMDLINE_LINUX_DEFAULT=""
      - name: Update GRUB config
        ansible.builtin.shell:
          cmd: . /etc/profile && update-grub
    - name: Install Hyper-V additions
      when: ansible_facts['virtualization_type'] == "VirtualPC"
      block:
      - name: Install Hyper-V daemons
        ansible.builtin.package:
          name: hyperv-daemons
          state: present
      - name: Enable Hyper-V daemons
        ansible.builtin.systemd_service:
          name: "{{ item }}"
          enabled: true
        loop:
          - hv-kvp-daemon
          - hv-vss-daemon
          - hv-fcopy-daemon
    - name: Configure for Vagrant
      block:
      - name: Install sudo
        ansible.builtin.package:
          name: sudo
          state: present
      - name: set root password
        ansible.builtin.user:
          name: root
          password: "$y$j9T$qDayOdSe2TUId1eQEaRV5.$qg7vL52D842FdUK6qj/sqvPMB0YbxIWJDHKA3o0OVU9"
      - name: Create vagrant user
        ansible.builtin.user:
          name: vagrant
          password: "$y$j9T$qDayOdSe2TUId1eQEaRV5.$qg7vL52D842FdUK6qj/sqvPMB0YbxIWJDHKA3o0OVU9"
          shell: /bin/bash
      - name: Add vagrant user to sudoers
        ansible.builtin.lineinfile:
          path: /etc/sudoers.d/vagrant
          line: "vagrant ALL=(ALL) NOPASSWD: ALL"
          create: yes
      - name: Create vagrant user .ssh dir
        ansible.builtin.file:
          path: /home/vagrant/.ssh
          state: directory
          owner: vagrant
          group: vagrant
          mode: '0700'
      - name: Copy vagrant insecure keys
        ansible.builtin.copy:
          src: files/vagrant-insecure.pub
          dest: /home/vagrant/.ssh/authorized_keys
          owner: vagrant
          group: vagrant
          mode: '0600'
    - name: Configure network
      block:
      - name: Copy NIC config
        ansible.builtin.copy:
          src: files/eth0.dhcp.cfg
          dest: /etc/systemd/network/eth0.network
      - name: Install systemd-resolved
        ansible.builtin.package:
          name: systemd-resolved
          state: present
      - name: Enable network services
        ansible.builtin.systemd_service:
          name: systemd-networkd
          enabled: true
    - name: Cleanup
      block:      
      - name: Delete apt cache
        ansible.builtin.apt:
          autoclean: yes
